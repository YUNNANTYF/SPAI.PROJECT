import socket
import pyaudio
import sys
import struct

FORMAT = pyaudio.paInt16
CHANNELS = 1
RATE = 44100
#CHUNK = 2048
 

localIP     = "192.168.0.237"

localPort   = 1234

bufferSize  = 9216

 

msgFromServer       = "Hello UDP Client"

bytesToSend         = str.encode(msgFromServer)

 

# Create a datagram socket

UDPServerSocket = socket.socket(family=socket.AF_INET, type=socket.SOCK_DGRAM)

 

# Bind to address and ip

UDPServerSocket.bind((localIP, localPort))

# Audio stream
audio = pyaudio.PyAudio()
stream = audio.open(format=FORMAT, channels=CHANNELS, rate=RATE, output=True, frames_per_buffer=bufferSize)
 

print("UDP server up and listening")
bytesAddressPair = UDPServerSocket.recvfrom(bufferSize)
address = bytesAddressPair[1]
#clientMsg = "Message from Client:{}".format(message)
clientIP  = "Client IP Address:{}".format(address)
#print(clientMsg)
print(clientIP)
 

# Listen for incoming datagrams
try:

    while(True):

        #message = bytesAddressPair[0]
        data = UDPServerSocket.recv(bufferSize)
        #type(data)
        #data = int.from_bytes(data, byteorder='big', signed=True)
        #data.decode('utf8')
        #data.encode('Int16')
        #Audio play
        stream.write(data)

except KeyboardInterrupt:
    pass

    
print("shutting down")
UDPServerSocket.close()
stream.close()
audio.terminate()
   

    # Sending a reply to client

    #UDPServerSocket.sendto(bytesToSend, address)
